<!DOCTYPE html>
<html lang="en">

<head>
    <!-- Defines the character set for the document -->
    <meta charset="UTF-8">
    <!-- Sets the viewport width and initial scale for mobile devices -->
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <!-- Specifies the title of the document -->
    <title>DBGI - Home</title>

    <!-- Includes Bootstrap CSS from a CDN -->
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <!-- Includes a custom CSS file -->
    <link rel="stylesheet" type="text/css" href="../css/style.css" />
    <!-- Specifies a favicon for the document -->
    <link rel="shortcut icon" href="../assets/logo.png">

    <!-- Includes jQuery, Popper.js, and Bootstrap JS from a CDN -->
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>

    <!-- Includes Plotly.js, D3.js, and Highcharts from a CDN -->
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/sunburst.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
            <!-- Styles -->
<style>
    #chartdiv {
      width: 100%;
      height: 500px;
    }
    </style>
    
    <!-- Resources -->
    <script src="https://cdn.amcharts.com/lib/5/index.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/xy.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/radar.js"></script>
    <script src="https://cdn.amcharts.com/lib/5/themes/Animated.js"></script>
    
    <!-- Chart code -->
    <script>

    // Total values from https://www.catalogueoflife.org/data/taxon/5T6MX
    const TotalSpecies = 2103820;
    const CollectedSpecies = <%= results.count_of_species %>;

    const TotalGenus = 204205;
    const CollectedGenus = <%= results.count_of_genus %>;
    
    const TotalFamily = 13307;
    const CollectedFamily = <%= results.count_of_families %>;
    
    const TotalOrder = 1596;
    const CollectedOrder = <%= results.count_of_orders %>;
    
    //const TotalClass =300;
    //const CollectedClass = 30;

    const TotalKingdom = 7;
    const CollectedKingdom =  <%= results.count_of_kingdoms %>;

    am5.ready(function() {
    
    // Create root element
    // https://www.amcharts.com/docs/v5/getting-started/#Root_element
    var root = am5.Root.new("chartdiv");
    
    // Set themes
    // https://www.amcharts.com/docs/v5/concepts/themes/
    root.setThemes([
      am5themes_Animated.new(root)
    ]);
    
    // Create chart
    // https://www.amcharts.com/docs/v5/charts/radar-chart/
    var chart = root.container.children.push(am5radar.RadarChart.new(root, {
      panX: false,
      panY: false,
      wheelX: "panX",
      wheelY: "zoomX",
      innerRadius: am5.percent(20),
      startAngle: -90,
      endAngle: 180
    }));
    
    
    // Data
    var data = [{
      category: "Species",
      value: CollectedSpecies/TotalSpecies * 100,
      full: 100,
      columnSettings: {
        fill: chart.get("colors").getIndex(0)
      }
    }, {
      category: "Genus",
      value: CollectedGenus/TotalGenus * 100,
      full: 100,
      columnSettings: {
        fill: chart.get("colors").getIndex(1)
      }
    }, {
      category: "Family",
      value: CollectedFamily/TotalFamily *100,
      full: 100,
      columnSettings: {
        fill: chart.get("colors").getIndex(2)
      }
    }, {
      category: "Order",
      value: CollectedOrder/TotalOrder * 100,
      full: 100,
      columnSettings: {
        fill: chart.get("colors").getIndex(3)
      }
    },
    /* {
      category: "Class",
      value: CollectedClass/TotalClass * 100,
      full: 100,
      columnSettings: {
        fill: chart.get("colors").getIndex(4)
      }
    }, */
    {
      category: "Phylum",
      value: CollectedKingdom/TotalKingdom * 100,
      full: 100,
      columnSettings: {
        fill: chart.get("colors").getIndex(5)
      }
    }];
    
    // Add cursor
    // https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor
    var cursor = chart.set("cursor", am5radar.RadarCursor.new(root, {
      behavior: "zoomX"
    }));
    
    cursor.lineY.set("visible", false);
    
    // Create axes and their renderers
    // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes
    var xRenderer = am5radar.AxisRendererCircular.new(root, {
      //minGridDistance: 50
    });
    
    xRenderer.labels.template.setAll({
      radius: 10
    });
    
    xRenderer.grid.template.setAll({
      forceHidden: true  
    });
    
    var xAxis = chart.xAxes.push(am5xy.ValueAxis.new(root, {
      renderer: xRenderer,
      min: 0,
      max: 50,
      strictMinMax: true,
      numberFormat: "#'%'",
      tooltip: am5.Tooltip.new(root, {})
    }));
    
    
    var yRenderer = am5radar.AxisRendererRadial.new(root, {
      minGridDistance: 20
    });
    
    yRenderer.labels.template.setAll({
      centerX: am5.p100,
      fontWeight: "500",
      fontSize: 18,
      templateField: "columnSettings"
    });
    
    yRenderer.grid.template.setAll({
      forceHidden: true
    });
    
    var yAxis = chart.yAxes.push(am5xy.CategoryAxis.new(root, {
      categoryField: "category",
      renderer: yRenderer
    }));
    
    yAxis.data.setAll(data);
    
    
    // Create series
    // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series
    var series1 = chart.series.push(am5radar.RadarColumnSeries.new(root, {
      xAxis: xAxis,
      yAxis: yAxis,
      clustered: false,
      valueXField: "full",
      categoryYField: "category",
      fill: root.interfaceColors.get("alternativeBackground")
    }));
    
    series1.columns.template.setAll({
      width: am5.p100,
      fillOpacity: 0.08,
      strokeOpacity: 0,
      cornerRadius: 20
    });
    
    series1.data.setAll(data);
    
    
    var series2 = chart.series.push(am5radar.RadarColumnSeries.new(root, {
      xAxis: xAxis,
      yAxis: yAxis,
      clustered: false,
      valueXField: "value",
      categoryYField: "category"
    }));
    
    series2.columns.template.setAll({
      width: am5.p100,
      strokeOpacity: 0,
      tooltipText: "{category}: {valueX}%",
      cornerRadius: 20,
      templateField: "columnSettings"
    });
    
    series2.data.setAll(data);
    
    // Animate chart and series in
    // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation
    series1.appear(1000);
    series2.appear(1000);
    chart.appear(1000, 100);
    
    }); // end am5.ready()
    </script>
    
</head>
<body>
    <!-- Includes the navigation bar using EJS partials -->
    <%- include('./partials/nav.ejs') %>

    <!-- Main content wrapper -->
    <div class="content">
        <!-- Main title of the page -->
        <h1 class="center">Welcome!</h1>

        <img src="assets/DBGI.png" width="100%" height="100%"/>

    <!-- HTML -->
        <div id="chartdiv"></div>
            </div>
        </body>
        </html>
