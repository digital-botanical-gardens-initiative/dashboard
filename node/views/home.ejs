<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>DBGI - Home</title>
    <link rel="stylesheet" href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css">
    <link rel="stylesheet" type="text/css" href="css/style.css" />
    <script src="https://code.jquery.com/jquery-3.3.1.slim.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/@popperjs/core@2.11.6/dist/umd/popper.min.js"></script>
    <script src="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js"></script>
    <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
    <script src="https://d3js.org/d3.v7.min.js"></script>
    <script src="https://code.highcharts.com/highcharts.js"></script>
    <script src="https://code.highcharts.com/modules/sunburst.js"></script>
    <script src="https://code.highcharts.com/modules/exporting.js"></script>
    <script src="https://code.highcharts.com/modules/export-data.js"></script>
    <script src="https://code.highcharts.com/modules/accessibility.js"></script>
</head>
<body>
    <%- include('./partials/nav.ejs') %>

    <h1>Welcome!</h1>
    <div class="row">
        <div class="column">
    <h3>Molecular diversity in the DBGI</h3>
    <button onclick="window.location.href='/element';">Browse Molecular Diversity</button>
    <script src="https://d3js.org/d3.v5.min.js"></script>
    <script>
        var treeMol = <%- JSON.stringify(treeMol) %>;
    
        var diameter = 500;
        var radius = diameter / 2;
        var innerRadius = radius - 120;
    
        var tree = d3.tree()
            .size([2 * Math.PI, innerRadius])
            .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });
    
        var root = d3.hierarchy(treeMol);
        let treeData = tree(root);
    
        let nodes = treeData.descendants();
        let links = treeData.links();

        var svg = d3.select("body").append("svg")
            .attr("width", 500)
            .attr("height", 500)
            .append("g")
            .attr("transform", "translate(" + radius + "," + radius + ")");

    
        var link = svg.selectAll(".link")
            .data(links)
            .enter().append("path")
            .attr("class", "link")
            .attr("d", d3.linkRadial()
                .angle(function(d) { return d.x; })
                .radius(function(d) { return d.y; }));
    
        var node = svg.selectAll(".node")
            .data(nodes)
            .enter().append("g")
            .attr("class", function(d) { return "node" + (d.children ? " node--internal" : " node--leaf"); })
            .attr("transform", function(d) { return "rotate(" + (d.x * 180 / Math.PI - 90) + ")translate(" + d.y + ")"; });
    
        node.append("circle")
            .attr("r", 4.5);
    
        node.append("text")
            .attr("dy", ".31em")
            .attr("x", function(d) { return d.x < Math.PI === !d.children ? 6 : -6; })
            .style("font-size", "7px")
            .attr("text-anchor", function(d) { return d.x < Math.PI === !d.children ? "start" : "end"; })
            .attr("transform", function(d) { return d.x >= Math.PI ? "rotate(180)" : null; })
            .text(function(d) { return d.children ? d.data.name : ""; });  // Only render the name if the node has children
    
    </script>
    </div>
    <div class="column">
    <h3>Organism diversity in the DBGI</h3>
    <button onclick="window.location.href='/organism';">Browse Organism diversity</button>
    <script>
        var treeOrg = <%- JSON.stringify(treeOrg) %>;
    
        var diameter = 500;
        var radius = diameter / 2;
        var innerRadius = radius - 120;
    
        var tree = d3.tree()
            .size([2 * Math.PI, innerRadius])
            .separation(function(a, b) { return (a.parent == b.parent ? 1 : 2) / a.depth; });
    
        var root = d3.hierarchy(treeOrg);
    
        tree(root);
    
        var svg = d3.select("body").append("svg")
            .attr("width", 500)
            .attr("height", 500)
            .append("g")
            .attr("transform", "translate(" + radius + "," + radius + ")");
    
        var link = svg.selectAll(".link")
            .data(root.links())
            .enter().append("path")
            .attr("class", "link")
            .attr("d", d3.linkRadial()
                .angle(function(d) { return d.x; })
                .radius(function(d) { return d.y; }));
    
        var node = svg.selectAll(".node")
            .data(root.descendants())
            .enter().append("g")
            .attr("class", function(d) { return "node" + (d.children ? " node--internal" : " node--leaf"); })
            .attr("transform", function(d) { return "rotate(" + (d.x * 180 / Math.PI - 90) + ")translate(" + d.y + ")"; });
    
        node.append("circle")
            .attr("r", 4.5);
    
        node.append("text")
            .attr("dy", ".31em")
            .attr("x", function(d) { return d.x < Math.PI === !d.children ? 6 : -6; })
            .style("font-size", "7px")
            .attr("text-anchor", function(d) { return d.x < Math.PI === !d.children ? "start" : "end"; })
            .attr("transform", function(d) { return d.x >= Math.PI ? "rotate(180)" : null; })
            .text(function(d) { return d.children ? d.data.name : ""; });  // Only render the name if the node has children

    
    </script>
    </div>
    </div>
</body>
</html>
