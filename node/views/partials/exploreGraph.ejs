<div>
    Your search returned <%= hits %> hits.
    <% if (typeof results !== 'undefined' && results.length !== 0) { %>
        <script src="https://cdn.plot.ly/plotly-latest.min.js"></script>
        <div id="chart-container" style="width:1000px;height:500px;"></div>
        <script>
            var data = <%- JSON.stringify(results) %>;
        
            var ids = [];
            var labels = [];
            var parents = [];
            var sizes = [];
            var depths = [];
        
            function processData(node, parentPath, depth) {
                var label = node.name !== null ? node.name : 'NA';  // Replace null names with 'NA'
                var id = parentPath ? parentPath + '/' + label : label;  // Create a unique id based on the path from the root
                ids.push(id);
                labels.push(label);
                parents.push(parentPath || '');
                sizes.push(node.size || 0);
                depths.push(depth);  // Record the depth of each node
                if (node.children) {
                    node.children.forEach(function(child) {
                        processData(child, id, depth + 1);  // Increase depth by 1 for each child
                    });
                }
            }
        
            data.children.forEach(function(child) {
                processData(child, null, 1);  // Start processing from depth = 1
            });
        
            var colors = ['#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#6e016b'];
        
            var data = [{
                type: 'treemap',
                ids: ids,
                labels: labels,
                parents: parents,
                values: sizes,
                textinfo: 'label+value',
                hoverinfo: 'label+value',
                marker: {
                    colors: depths.map(depth => colors[depth % colors.length])  // Assign color based on depth
                }
            }];
        
            var layout = {
                height: 500,
                width: 1000,
            };
        
            Plotly.newPlot('chart-container', data, layout);
        </script>
        

    <% } %>
</div>
